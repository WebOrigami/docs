// This file defines the intermediate steps for producing the `pages` tree from
// the markdown in the `content` folder.
{
  withData = deepMap(content, {
    extension: ".md"
    value: (buffer, key, tree) => js/addData.js(buffer, key, areas.yaml/, tree, tree/pages.yaml, client/assets/origami)
  })

  // Take the markdown files and inline any Web Origami expressions contained
  // in curly braces.
  inlined = deepMap(withData, { extension: ".md", value: inline })

  // Convert the markdown (including inlined content) to HTML while preserving
  // the front matter at the top of each document. As the content is now HTML,
  // we change the file extension from `.md` to `.html`. The result is a tree of
  // HTML content; each value represents the main body of a given page.
  html = deepMap(inlined, mdHtml)

  headerLinks = deepMap(html, ={
    ..._
    @text: js/headerLinks.js(_/@text)
  })

  // Apply the documentation page template. This injects the HTML content from
  // the previous step into the site's main page template, which adds headers
  // and navigation chrome. This step concludes the main documentation pipeline.
  pages = deepMap(headerLinks, { extension: ".html", value: templates/page.ori })
}